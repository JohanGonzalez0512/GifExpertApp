{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","estado","setEstado","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAe5C,OACI,0BAAMC,SAVK,SAACC,GAChBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,OAMV,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAlBQ,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,Y,uBCLdG,EAAO,uCAAE,WAAOC,GAAP,uBAAAC,EAAA,6DAEZC,EAFY,iDAEkCC,UAAUH,GAF5C,+DAGDI,MAAMF,GAHL,cAGZG,EAHY,gBAIGA,EAAKC,OAJR,uBAIXC,EAJW,EAIXA,KAEDC,EAAKD,EAAKE,KAAI,SAACC,GAAO,IAAD,EAEvB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXxB,kBAgBPM,GAhBO,4CAAF,sDCCPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,yBAAKc,UAAU,wCACZ,yBAAKC,IAAKf,EAAKgB,IAAKN,IACnB,2BAAIA,KCDHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAc,IAAD,EAEVd,mBAAS,CACrCqB,KAAK,GACLa,SAAQ,IAJ8B,mBAE/BC,EAF+B,KAEvBC,EAFuB,KAuBtC,OAdAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GACFC,YAAW,WACXJ,EAAU,CACNf,KAAOkB,EACPL,SAAS,MAGZ,OAEP,CAACpB,OAGIqB,EDnBsBM,CAAa3B,GAA9Ba,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAMpB,OACI,oCACA,wBAAIJ,UAAU,mCAAmChB,GAEhDoB,GAAU,uBAAGJ,UAAU,yCAAb,WACX,yBAAKA,UAAW,aAIAH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACAkB,IAAKlB,EAAIC,IACLD,UEpBnBmB,EAAc,WAAK,IAAD,EAGS3C,mBAAS,CAAC,aAHnB,mBAGpB4C,EAHoB,KAGR7C,EAHQ,KAU3B,OACI,oCACA,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAIA,4BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CAASA,SAAUA,EACnB4B,IAAK5B,UCrBtB+B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.f683b5d2.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\nconst [inputValue, setInputValue] = useState(\"\");\r\nconst handleInputChange=(e)=>{\r\n    setInputValue(e.target.value);\r\n}\r\n\r\nconst handleSubmit=(e)=>{\r\n    e.preventDefault();\r\n//console.log(\"submit hecho\");\r\n    if(inputValue.trim().length>2){\r\n        setCategories(cats=>[inputValue,...cats]);\r\n        setInputValue(\"\");\r\n    }\r\n}\r\n   \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}\r\n","  \r\nexport const getGifs= async (category)=>{\r\n    \r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=CU25HAZxIc95zQFWITii7pnl3VEeAmws`;\r\n    const resp=await fetch(url);\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs=data.map((img)=>{\r\n\r\n        return{\r\n            id: img.id,\r\n            title:img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n     \r\n        return gifs;\r\n       \r\n}    ","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__tada\">\r\n           <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n//import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading}=useFetchGifs(category);\r\n\r\n    \r\n   \r\n  \r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__tada\">{category}</h3>\r\n\r\n        {loading &&<p className=\"animate__animated animate__backInDown\">Loading</p>}\r\n        <div className =\"card-grid\">\r\n          \r\n                {\r\n                   \r\n                        images.map(img=>(\r\n                            <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                            />\r\n                        ))\r\n                    \r\n\r\n                }\r\n          \r\n        </div>\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from \"react\"\r\nimport {getGifs}from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [estado, setEstado] = useState({\r\n    data:[] ,\r\n    loading:true\r\n});\r\n\r\n      \r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n        .then(imgs=>{\r\n            setTimeout(() => {\r\n            setEstado({\r\n                data : imgs,\r\n                loading: false\r\n            });\r\n          \r\n        }  , 3000);\r\n\r\n    },[category])\r\n    \r\n    })\r\n    return estado;\r\n\r\n}","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n//import PropTypes from 'prop-types'\r\n//const categories=['Spiderman','Dua lipa','Twenty One Pilots']\r\nexport const GifExpertApp=(()=>{\r\n\r\n\r\n    const [categories, setCategories] = useState(['Dua lipa'])\r\n\r\n\r\n   /*  const handleAdd=()=>{\r\n        setCategories([...categories,'Iron man'])\r\n    } */\r\n\r\n    return(\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories}/>\r\n        <hr/>\r\n\r\n       \r\n        \r\n        <ol>\r\n            {\r\n                categories.map(category=>(\r\n                 <GifGrid category={category}\r\n                 key={category}\r\n                 />\r\n                ))\r\n            }\r\n        </ol>\r\n\r\n        </>\r\n\r\n\r\n\r\n    )\r\n\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}